<!doctype html>
<html>
<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
  <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->

  <title>Start</title>
  <!-- Bootstrap -->
  <link href="css/bootstrap.min.css" rel="stylesheet">

  <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
  <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
  <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
  <![endif]-->

  <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
  <style>
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
      #map {
        height: 87%;
      }
      .gmnoprint {
        display:none;
      }
      
      .controls {
        margin-top: 10px;
        border-radius: 2px 0 0 2px;
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        height: 32px;
        outline: none;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
      }

      #pac-input {
        background-color: #fff;
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
        margin-right: 500px;
        padding: 0 11px 0 13px;
        text-overflow: ellipsis;
        width: 95%;
        position:absolute;
        left: 2.5% !important;
      }

      #pac-input:focus {
        border-color: #4d90fe;
      }

      .pac-container {
        font-family: Roboto;
      }

      #type-selector {
        color: #fff;
        background-color: #4d90fe;
        padding: 5px 11px 0px 11px;
      }

      #type-selector label {
        font-family: Roboto;
        font-size: 13px;
        font-weight: 300;
      }
      #target {
        width: 345px;
      }

      td, th {
        padding: 10px;
      }
      .distance {
        color: red;
      }
      h1 {
        font-size: 150%;
        padding: .2em;
        margin: 0px;
      }
      #close-items {
        width: 100%;
      }
      #close-items td {
        padding: .2em;
      }
    </style>
    <script>
    // This example adds a search box to a map, using the Google Place Autocomplete
    // feature. People can enter geographical searches. The search box will return a
    // pick list containing a mix of places and predicted search terms.

    function initAutocomplete() {
      var map = new google.maps.Map(document.getElementById('map'), {
        center: {lat: 59.348021, lng: 18.071344},
        zoom: 15,
        mapTypeId: google.maps.MapTypeId.ROADMAP
      });

      // Create the search box and link it to the UI element.
      var input = document.getElementById('pac-input');
      var searchBox = new google.maps.places.SearchBox(input);
      map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

      // Bias the SearchBox results towards current map's viewport.
      map.addListener('bounds_changed', function() {
        searchBox.setBounds(map.getBounds());
      });

      var markers = [];
      // [START region_getplaces]
      // Listen for the event fired when the user selects a prediction and retrieve
      // more details for that place.
      searchBox.addListener('places_changed', function() {
        var places = searchBox.getPlaces();

        if (places.length == 0) {
          return;
        }

        // Clear out the old markers.
        markers.forEach(function(marker) {
          marker.setMap(null);
        });
        markers = [];

        // For each place, get the icon, name and location.
        var bounds = new google.maps.LatLngBounds();
        places.forEach(function(place) {
          var icon = {
            url: place.icon,
            size: new google.maps.Size(71, 71),
            origin: new google.maps.Point(0, 0),
            anchor: new google.maps.Point(17, 34),
            scaledSize: new google.maps.Size(25, 25)
          };

          // Create a marker for each place.
          markers.push(new google.maps.Marker({
            map: map,
            icon: icon,
            title: place.name,
            position: place.geometry.location
          }));

          if (place.geometry.viewport) {
            // Only geocodes have viewport.
            bounds.union(place.geometry.viewport);
          } else {
            bounds.extend(place.geometry.location);
          }
        });
        map.fitBounds(bounds);
      });
      // [END region_getplaces]

      markers.push(new google.maps.Marker({
        position: {lat: 59.339497, lng: 18.072462},
        map: map
      }));
      markers.push(new google.maps.Marker({
        position: {lat: 59.343633, lng: 18.070402},
        map: map
      }));


      
    }
  </script>
</head>
<body>
  <table style="width: 100%; font-size: 1.2em;">
    <tr>
      <td><a href="statistics.htm">Statistik</a></td>
      <td style="font-weight: bold;text-align: center;">PantApp</td>
      <td style="text-align: right;"><a href="add.htm">Lägg till</a></td>
    </tr>
  </table>
  <input id="pac-input" class="controls" type="text" placeholder="Hitta burkområde">
  <div id="map"></div>
  <div>
    <h1>Nära dig</h1>
    <table id="close-items">
      <tr><td>20 burkar</td><td class="distance">300m</td></tr>
      <tr><td>7 burkar</td><td class="distance">800m</td></tr>
      <tr><td>52 burkar</td><td class="distance">900m</td></tr>
    </ul>
  </div>
  <script src="https://maps.googleapis.com/maps/api/js?libraries=places&callback=initAutocomplete" async defer></script>
</body>
</html>
